{% extends 'base.html.twig' %}

{% block title %}Mes informations - Dawn GN{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Fonction générique pour afficher une alerte de succès
            function showSuccessAlert(title, text) {
                return Swal.fire({
                    title: title,
                    text: text,
                    icon: 'success',
                    customClass: {
                        confirmButton: "border-0 inline-flex justify-center rounded-md bg-gradient-to-tl from-gray-900 to-slate-800 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:scale-102 hover:bg-slate-800 w-30"
                    }
                }).then(() => {
                    window.location.reload();
                });
            }

            // Fonction générique pour afficher une alerte d'erreur
            function showErrorAlert(error) {
                return Swal.fire({
                    title: 'Erreur !',
                    text: error.message,
                    icon: 'error',
                    customClass: {
                        confirmButton: "border-0 inline-flex justify-center rounded-md bg-gradient-to-tl from-gray-900 to-slate-800 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:scale-102 hover:bg-slate-800 w-30"
                    }
                });
            }

            // Fonction générique pour la confirmation de suppression
            function showDeleteConfirmation(deleteCallback) {
                return Swal.fire({
                    title: 'Êtes-vous sûr ?',
                    text: 'Cette action est irréversible',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Oui, supprimer',
                    cancelButtonText: 'Annuler',
                    customClass: {
                        confirmButton: "border-0 inline-flex justify-center rounded-md bg-gradient-to-tl from-red-600 to-rose-400 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:scale-102 hover:opacity-75 w-40",
                        cancelButton: "border-0 inline-flex justify-center rounded-md bg-gradient-to-tl from-slate-600 to-slate-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:scale-102 hover:opacity-75 w-40",
                        actions: 'flex gap-4 justify-center mt-4',
                        popup: 'w-96'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        deleteCallback();
                    }
                });
            }

            // Mettre à jour les classes des boutons dans tous les modals
            const modalClasses = {
                confirmButton: "border-0 inline-flex justify-center rounded-md bg-gradient-to-tl from-gray-900 to-slate-800 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:scale-102 hover:bg-slate-800 w-30",
                cancelButton: "border-0 inline-flex justify-center rounded-md bg-gradient-to-tl from-slate-600 to-slate-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:scale-102 hover:opacity-75 w-30",
                actions: 'flex gap-4 justify-center mt-4',
                popup: 'w-96'
            };

            // Fonction pour tronquer le texte
            function truncateText(text, maxLength = 100) {
                if (text.length <= maxLength) return text;
                return text.substr(0, maxLength) + '...';
            }

            // Fonction pour afficher la note complète
            window.viewFullNote = function(content) {
                // Convertir les retours à la ligne en <br>
                const formattedContent = content.replace(/\n/g, '<br>');
                
                Swal.fire({
                    title: 'Note',
                    html: `<div class="text-left break-words p-4 text-sm">${formattedContent}</div>`,
                    confirmButtonText: 'Fermer',
                    customClass: {
                        confirmButton: "border-0 inline-flex justify-center rounded-md bg-gradient-to-tl from-gray-900 to-slate-800 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:scale-102 hover:bg-slate-800 w-30",
                        htmlContainer: 'max-h-[60vh] overflow-y-auto',
                        popup: 'w-[32rem]'
                    },
                    showClass: {
                        popup: 'animate__animated animate__fadeIn'
                    },
                    hideClass: {
                        popup: 'animate__animated animate__fadeOut'
                    }
                });
            };

            // Contacts d'urgence
            window.openEmergencyContactModal = function() {
                Swal.fire({
                    title: 'Ajouter un contact d\'urgence',
                    html: `
                        <div class="mb-4">
                            <input type="text" id="emergency-contact-name" class="text-sm focus:shadow-soft-primary-outline leading-5.6 ease-soft block w-full appearance-none rounded-lg border border-solid border-gray-300 bg-white bg-clip-padding py-2 px-3 font-normal text-gray-800 transition-all focus:border-fuchsia-300 focus:bg-white focus:text-gray-800 focus:outline-none focus:transition-shadow" placeholder="Nom du contact" required>
                        </div>
                        <div class="mb-4">
                            <input type="tel" id="emergency-contact-phone" class="text-sm focus:shadow-soft-primary-outline leading-5.6 ease-soft block w-full appearance-none rounded-lg border border-solid border-gray-300 bg-white bg-clip-padding py-2 px-3 font-normal text-gray-800 transition-all focus:border-fuchsia-300 focus:bg-white focus:text-gray-800 focus:outline-none focus:transition-shadow" placeholder="Numéro de téléphone" required>
                        </div>
                    `,
                    showCancelButton: true,
                    confirmButtonText: 'Ajouter',
                    cancelButtonText: 'Annuler',
                    customClass: modalClasses,
                    preConfirm: () => {
                        const name = document.getElementById('emergency-contact-name').value;
                        const phone = document.getElementById('emergency-contact-phone').value;
                        
                        if (!name || !phone) {
                            Swal.showValidationMessage('Veuillez remplir tous les champs');
                            return false;
                        }
                        
                        return fetch('{{ path('app_account_emergency_contact_add') }}', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                name: name,
                                phone: phone
                            })
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Une erreur est survenue');
                            }
                            return response.json();
                        })
                        .catch(error => {
                            Swal.showValidationMessage(error.message);
                        });
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        showSuccessAlert('Contact ajouté !', 'Le contact d\'urgence a été ajouté avec succès.');
                    }
                });
            };

            window.editEmergencyContact = function(id, name, phone) {
                Swal.fire({
                    title: 'Modifier le contact d\'urgence',
                    html: `
                        <div class="mb-4">
                            <input type="text" id="emergency-contact-name" class="text-sm focus:shadow-soft-primary-outline leading-5.6 ease-soft block w-full appearance-none rounded-lg border border-solid border-gray-300 bg-white bg-clip-padding py-2 px-3 font-normal text-gray-800 transition-all focus:border-fuchsia-300 focus:bg-white focus:text-gray-800 focus:outline-none focus:transition-shadow" placeholder="Nom du contact" required>
                        </div>
                        <div class="mb-4">
                            <input type="tel" id="emergency-contact-phone" class="text-sm focus:shadow-soft-primary-outline leading-5.6 ease-soft block w-full appearance-none rounded-lg border border-solid border-gray-300 bg-white bg-clip-padding py-2 px-3 font-normal text-gray-800 transition-all focus:border-fuchsia-300 focus:bg-white focus:text-gray-800 focus:outline-none focus:transition-shadow" placeholder="Numéro de téléphone" required>
                        </div>
                    `,
                    showCancelButton: true,
                    confirmButtonText: 'Modifier',
                    cancelButtonText: 'Annuler',
                    customClass: modalClasses,
                    didOpen: () => {
                        document.getElementById('emergency-contact-name').value = name;
                        document.getElementById('emergency-contact-phone').value = phone;
                    },
                    preConfirm: () => {
                        const name = document.getElementById('emergency-contact-name').value;
                        const phone = document.getElementById('emergency-contact-phone').value;
                        
                        if (!name || !phone) {
                            Swal.showValidationMessage('Veuillez remplir tous les champs');
                            return false;
                        }
                        
                        return fetch(`{{ path('app_account_emergency_contact_edit', {'id': 'CONTACT_ID'}) }}`.replace('CONTACT_ID', id), {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                name: name,
                                phone: phone
                            })
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Une erreur est survenue');
                            }
                            return response.json();
                        })
                        .catch(error => {
                            Swal.showValidationMessage(error.message);
                        });
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        showSuccessAlert('Contact modifié !', 'Le contact d\'urgence a été modifié avec succès.');
                    }
                });
            };

            window.deleteEmergencyContact = function(id) {
                showDeleteConfirmation(() => {
                    fetch(`{{ path('app_account_emergency_contact_delete', {'id': 'CONTACT_ID'}) }}`.replace('CONTACT_ID', id), {
                        method: 'DELETE'
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Une erreur est survenue');
                        }
                        showSuccessAlert('Contact supprimé !', 'Le contact d\'urgence a été supprimé avec succès.');
                    })
                    .catch(error => {
                        showErrorAlert(error);
                    });
                });
            };

            // Allergies
            window.openAllergyModal = function() {
                Swal.fire({
                    title: 'Ajouter une allergie',
                    html: `
                        <div class="mb-4">
                            <input type="text" id="allergy-name" class="text-sm focus:shadow-soft-primary-outline leading-5.6 ease-soft block w-full appearance-none rounded-lg border border-solid border-gray-300 bg-white bg-clip-padding py-2 px-3 font-normal text-gray-800 transition-all focus:border-fuchsia-300 focus:bg-white focus:text-gray-800 focus:outline-none focus:transition-shadow" placeholder="Nom de l'allergie" required>
                        </div>
                    `,
                    showCancelButton: true,
                    confirmButtonText: 'Ajouter',
                    cancelButtonText: 'Annuler',
                    customClass: modalClasses,
                    preConfirm: () => {
                        const name = document.getElementById('allergy-name').value;
                        
                        if (!name) {
                            Swal.showValidationMessage('Veuillez remplir le champ');
                            return false;
                        }
                        
                        return fetch('{{ path('app_account_allergy_add') }}', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                name: name
                            })
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Une erreur est survenue');
                            }
                            return response.json();
                        })
                        .catch(error => {
                            Swal.showValidationMessage(error.message);
                        });
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        showSuccessAlert('Allergie ajoutée !', 'L\'allergie a été ajoutée avec succès.');
                    }
                });
            };

            window.editAllergy = function(id, name) {
                Swal.fire({
                    title: 'Modifier l\'allergie',
                    html: `
                        <div class="mb-4">
                            <input type="text" id="allergy-name" class="text-sm focus:shadow-soft-primary-outline leading-5.6 ease-soft block w-full appearance-none rounded-lg border border-solid border-gray-300 bg-white bg-clip-padding py-2 px-3 font-normal text-gray-800 transition-all focus:border-fuchsia-300 focus:bg-white focus:text-gray-800 focus:outline-none focus:transition-shadow" placeholder="Nom de l'allergie" required>
                        </div>
                    `,
                    showCancelButton: true,
                    confirmButtonText: 'Modifier',
                    cancelButtonText: 'Annuler',
                    customClass: modalClasses,
                    didOpen: () => {
                        document.getElementById('allergy-name').value = name;
                    },
                    preConfirm: () => {
                        const name = document.getElementById('allergy-name').value;
                        
                        if (!name) {
                            Swal.showValidationMessage('Veuillez remplir le champ');
                            return false;
                        }
                        
                        return fetch(`{{ path('app_account_allergy_edit', {'id': 'ALLERGY_ID'}) }}`.replace('ALLERGY_ID', id), {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                name: name
                            })
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Une erreur est survenue');
                            }
                            return response.json();
                        })
                        .catch(error => {
                            Swal.showValidationMessage(error.message);
                        });
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        showSuccessAlert('Allergie modifiée !', 'L\'allergie a été modifiée avec succès.');
                    }
                });
            };

            window.deleteAllergy = function(id) {
                showDeleteConfirmation(() => {
                    fetch(`{{ path('app_account_allergy_delete', {'id': 'ALLERGY_ID'}) }}`.replace('ALLERGY_ID', id), {
                        method: 'DELETE'
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Une erreur est survenue');
                        }
                        showSuccessAlert('Allergie supprimée !', 'L\'allergie a été supprimée avec succès.');
                    })
                    .catch(error => {
                        showErrorAlert(error);
                    });
                });
            };

            // Notes
            window.openNoteModal = function() {
                Swal.fire({
                    title: 'Ajouter une note',
                    html: `
                        <div class="mb-4">
                            <textarea id="note-content" rows="4" class="text-sm focus:shadow-soft-primary-outline leading-5.6 ease-soft block w-full appearance-none rounded-lg border border-solid border-gray-300 bg-white bg-clip-padding py-2 px-3 font-normal text-gray-800 transition-all focus:border-fuchsia-300 focus:bg-white focus:text-gray-800 focus:outline-none focus:transition-shadow" placeholder="Contenu de la note" required></textarea>
                        </div>
                    `,
                    showCancelButton: true,
                    confirmButtonText: 'Ajouter',
                    cancelButtonText: 'Annuler',
                    customClass: modalClasses,
                    preConfirm: () => {
                        const content = document.getElementById('note-content').value;
                        
                        if (!content) {
                            Swal.showValidationMessage('Veuillez remplir le champ');
                            return false;
                        }
                        
                        return fetch('{{ path('app_account_note_add') }}', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                content: content
                            })
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Une erreur est survenue');
                            }
                            return response.json();
                        })
                        .catch(error => {
                            Swal.showValidationMessage(error.message);
                        });
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        showSuccessAlert('Note ajoutée !', 'La note a été ajoutée avec succès.');
                    }
                });
            };

            window.editNote = function(id, content) {
                Swal.fire({
                    title: 'Modifier la note',
                    html: `
                        <div class="mb-4">
                            <textarea id="note-content" rows="4" class="text-sm focus:shadow-soft-primary-outline leading-5.6 ease-soft block w-full appearance-none rounded-lg border border-solid border-gray-300 bg-white bg-clip-padding py-2 px-3 font-normal text-gray-800 transition-all focus:border-fuchsia-300 focus:bg-white focus:text-gray-800 focus:outline-none focus:transition-shadow" placeholder="Contenu de la note" required></textarea>
                        </div>
                    `,
                    showCancelButton: true,
                    confirmButtonText: 'Modifier',
                    cancelButtonText: 'Annuler',
                    customClass: modalClasses,
                    didOpen: () => {
                        document.getElementById('note-content').value = content;
                    },
                    preConfirm: () => {
                        const content = document.getElementById('note-content').value;
                        
                        if (!content) {
                            Swal.showValidationMessage('Veuillez remplir le champ');
                            return false;
                        }
                        
                        return fetch(`{{ path('app_account_note_edit', {'id': 'NOTE_ID'}) }}`.replace('NOTE_ID', id), {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                content: content
                            })
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Une erreur est survenue');
                            }
                            return response.json();
                        })
                        .catch(error => {
                            Swal.showValidationMessage(error.message);
                        });
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        showSuccessAlert('Note modifiée !', 'La note a été modifiée avec succès.');
                    }
                });
            };

            window.deleteNote = function(id) {
                showDeleteConfirmation(() => {
                    fetch(`{{ path('app_account_note_delete', {'id': 'NOTE_ID'}) }}`.replace('NOTE_ID', id), {
                        method: 'DELETE'
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Une erreur est survenue');
                        }
                        showSuccessAlert('Note supprimée !', 'La note a été supprimée avec succès.');
                    })
                    .catch(error => {
                        showErrorAlert(error);
                    });
                });
            };

            window.sweetTicket = function() {
                Swal.fire({
                    customClass: {
                        text: "!mt-2 sm:!mt-0 !m-0 !text-center sm:!text-left !text-s !text-gray-500 !pl-4 sm:!pl-0 !pr-4 !pb-4 sm:!pr-6 sm:!pb-4 sm:!ml-4 !col-start-1 sm:!col-start-2 !col-end-3",
                        confirmButton: "border-0 inline-flex justify-center rounded-md bg-gradient-to-tl from-gray-900 to-slate-800 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:scale-102 hover:bg-slate-800 w-30"
                    },    
                    width:"50%",
                    text: "Vous le trouverez ici, sur le billet HelloAsso reçu par mail.",
                    imageUrl: "{{ asset('img/billet_info.jpg') }}",
                    imageWidth: "100%",
                    confirmButtonText: "J'ai compris !",
                    animation: false
                });
            };
        });
    </script>
{% endblock %}

{% block body %}


        <div class="w-full px-6 mx-auto">
            <div class="relative flex flex-col flex-auto min-w-0 p-4 mt-12 overflow-hidden break-words border-0 shadow-blur rounded-2xl bg-white/80 bg-clip-border backdrop-blur-2xl backdrop-saturate-200">
                <div class="flex flex-wrap -mx-3">
                    <div class="flex-none w-auto max-w-full px-3">
                        <div class="text-base ease-soft-in-out h-18.5 w-18.5 relative inline-flex items-center justify-center rounded-xl text-white transition-all duration-200">
                            <img src="{{ asset('img/bruce-mars.jpg') }}" alt="profile_image" class="w-full shadow-soft-sm rounded-xl" />
                        </div>
                    </div>
                    <div class="flex-none w-auto max-w-full px-3 my-auto">
                        <div class="h-full">
                            <h5 class="mb-1">{{ user.name }}</h5>
                            <p class="mb-0 font-semibold leading-normal text-sm"><span class="font-extrabold text-slate-700">{{ user.registrations|length }}</span> participations</p>
                        </div>
                    </div>
                    <div class="w-full max-w-full px-3 mx-auto mt-4 sm:my-auto sm:mr-0 md:w-1/5 md:flex-none">
                        <div class="relative right-0">
                            N° de billet <a href="javascript:sweetTicket();" id="info" data-target="tooltip_trigger" data-placement="top"><i class="fa fa-question-circle hover:text-slate-700" aria-hidden="true"></i></a> 
                            <div data-target="tooltip" class="hidden px-2 py-1 text-center text-white bg-slate-700 rounded-lg text-sm" role="tooltip">
                                Plus d'informations
                                <div class="invisible absolute h-2 w-2 bg-inherit before:visible before:absolute before:h-2 before:w-2 before:rotate-45 before:bg-inherit before:content-['']" data-popper-arrow></div>
                            </div>
                            : <span class="font-extrabold text-slate-700">{% if user.registrations.empty == false and user.registrations.first %}{{ user.registrations.first.helloasso_ticket }}{% else %}Non renseigné{% endif %}</span>
                            <a href="#" data-target="tooltip_trigger" data-placement="top"><i class="ml-2 fa fa-pencil hover:scale-102 hover:text-slate-700"></i></a>
                            <div data-target="tooltip" class="hidden px-2 py-1 text-center text-white bg-slate-700 rounded-lg text-sm" role="tooltip">
                                Editer le numéro du billet
                                <div class="invisible absolute h-2 w-2 bg-inherit before:visible before:absolute before:h-2 before:w-2 before:rotate-45 before:bg-inherit before:content-['']" data-popper-arrow></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="w-full p-6 mx-auto">
            <div class="flex flex-wrap -mx-3">
                <div class="w-full max-w-full px-3 xl:w-4/12">
                    <div class="relative flex flex-col h-full min-w-0 break-words bg-white border-0 shadow-soft-xl rounded-2xl bg-clip-border">
                        <div class="p-4 pb-0 mb-0 bg-white border-b-0 rounded-t-2xl">
                            <h6 class="mb-0">Mes informations importantes</h6>
                        </div>
                        <div class="flex-auto p-4">
                            <h6 class="font-bold leading-tight uppercase text-xs text-slate-500">Contacts d'urgence</h6>
                            <ul class="mx-3 flex flex-col pl-0 mb-0 rounded-lg">
                                {% if user.emergencyContacts is empty %}
                                    <li class="relative flex items-center px-0 py-2 bg-white border-0 rounded-t-lg text-inherit">
                                        <div class="w-full mx-2 p-1 text-center justify-center bg-slate-100 bg-opacity-40 border rounded border-dashed border-slate-300">
                                            <span onclick="openEmergencyContactModal()" class="text-xs font-semibold leading-tight text-slate-300 cursor-pointer hover:scale-102 hover:text-slate-700 hover:underline"><strong class="font-extrabold">+ </strong>Ajouter un contact</span>
                                        </div>
                                    </li>
                                {% else %}
                                    {% for contact in user.emergencyContacts %}
                                        <li class="relative flex items-center px-0 py-2 bg-white border-0 rounded-t-lg text-inherit">
                                            <div class="flex flex-col items-start justify-center">
                                                <h6 class="mb-0 leading-normal text-sm">{{ contact.name }}</h6>
                                                <p class="mb-0 leading-tight text-xs">{{ contact.phone }}</p>
                                            </div>
                                            <a onclick="editEmergencyContact({{ contact.id }}, '{{ contact.name|e('js') }}', '{{ contact.phone|e('js') }}')"
                                               class="inline-block pl-0 pr-4 mb-0 ml-auto font-bold text-center align-middle transition-all bg-transparent border-0 rounded-lg shadow-none cursor-pointer leading-pro text-xs ease-soft-in text-slate-400 hover:text-slate-700 hover:underline"
                                               href="javascript:;">Modifier</a>
                                            <a onclick="deleteEmergencyContact({{ contact.id }})"
                                               class="inline-block pl-4 mb-0 ml-0 font-bold text-center align-middle transition-all bg-transparent border-0 shadow-none cursor-pointer leading-pro text-xs ease-soft-in text-slate-400 hover:text-red-600 hover:underline rounded-none border-l border-slate-300"
                                               href="javascript:;">Supprimer</a>
                                        </li>
                                    {% endfor %}
                                    <li class="relative flex items-center px-0 py-2 bg-white border-0 rounded-t-lg text-inherit">
                                        <div class="w-full mx-2 p-1 text-center justify-center bg-slate-100 bg-opacity-40 border rounded border-dashed border-slate-300">
                                            <span onclick="openEmergencyContactModal()" class="text-xs font-semibold leading-tight text-slate-300 cursor-pointer hover:scale-102 hover:text-slate-700 hover:underline"><strong class="font-extrabold">+ </strong>Ajouter un contact</span>
                                        </div>
                                    </li>
                                {% endif %}
                            </ul>
                            
                            <h6 class="mt-6 font-bold leading-tight uppercase text-xs text-slate-500">Allergies</h6>
                            <ul class="mx-3 flex flex-col pl-0 mb-0 rounded-lg">
                                {% if user.allergies is empty %}
                                    <li class="relative flex items-center px-0 py-2 bg-white border-0 rounded-t-lg text-inherit">
                                        <div class="w-full mx-2 p-1 text-center justify-center bg-slate-100 bg-opacity-40 border rounded border-dashed border-slate-300">
                                            <span onclick="openAllergyModal()" class="text-xs font-semibold leading-tight text-slate-300 cursor-pointer hover:scale-102 hover:text-slate-700 hover:underline"><strong class="font-extrabold">+ </strong>Ajouter une allergie</span>
                                        </div>
                                    </li>
                                {% else %}
                                    {% for allergy in user.allergies %}
                                        <li class="relative flex items-center px-0 py-2 bg-white border-0 rounded-t-lg text-inherit">
                                            <div class="flex flex-col items-start justify-center">
                                                <h6 class="mb-0 leading-normal text-sm">{{ allergy.name }}</h6>
                                            </div>
                                            <a onclick="editAllergy({{ allergy.id }}, '{{ allergy.name|e('js') }}')"
                                               class="inline-block pl-0 pr-4 mb-0 ml-auto font-bold text-center align-middle transition-all bg-transparent border-0 rounded-lg shadow-none cursor-pointer leading-pro text-xs ease-soft-in text-slate-400 hover:text-slate-700 hover:underline"
                                               href="javascript:;">Modifier</a>
                                            <a onclick="deleteAllergy({{ allergy.id }})"
                                               class="inline-block pl-4 mb-0 ml-0 font-bold text-center align-middle transition-all bg-transparent border-0 shadow-none cursor-pointer leading-pro text-xs ease-soft-in text-slate-400 hover:text-red-600 hover:underline rounded-none border-l border-slate-300"
                                               href="javascript:;">Supprimer</a>
                                        </li>
                                    {% endfor %}
                                    <li class="relative flex items-center px-0 py-2 bg-white border-0 rounded-t-lg text-inherit">
                                        <div class="w-full mx-2 p-1 text-center justify-center bg-slate-100 bg-opacity-40 border rounded border-dashed border-slate-300">
                                            <span onclick="openAllergyModal()" class="text-xs font-semibold leading-tight text-slate-300 cursor-pointer hover:scale-102 hover:text-slate-700 hover:underline"><strong class="font-extrabold">+ </strong>Ajouter une allergie</span>
                                        </div>
                                    </li>
                                {% endif %}
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="w-full max-w-full px-3 lg-max:mt-6 xl:w-4/12">
                    <div class="relative flex flex-col h-full min-w-0 break-words bg-white border-0 shadow-soft-xl rounded-2xl bg-clip-border">
                        <div class="p-4 pb-0 mb-0 bg-white border-b-0 rounded-t-2xl">
                            <div class="flex flex-wrap -mx-3">
                                <div class="flex items-center w-full max-w-full px-3 shrink-0 md:w-8/12 md:flex-none">
                                    <h6 class="mb-0">Mon profil</h6>
                                </div>
                                <div class="w-full max-w-full px-3 text-right shrink-0 md:w-4/12 md:flex-none">
                                    <a href="#" data-target="tooltip_trigger" data-placement="top">
                                        <i class="leading-normal fas fa-user-edit text-sm text-slate-400 hover:text-slate-700"></i>
                                    </a>
                                    <div data-target="tooltip" class="hidden px-2 py-1 text-center text-white bg-slate-700 rounded-lg text-sm" role="tooltip">
                                        Editer le profil
                                        <div class="invisible absolute h-2 w-2 bg-inherit before:visible before:absolute before:h-2 before:w-2 before:rotate-45 before:bg-inherit before:content-['']" data-popper-arrow></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="flex-auto p-4">
                            <hr class="h-px my-2 bg-transparent bg-gradient-to-r from-transparent via-white to-transparent" />
                            <ul class="flex flex-col pl-0 mb-0 rounded-lg">
                                <li class="relative block px-4 py-2 pt-0 pl-0 leading-normal bg-white border-0 rounded-t-lg text-sm text-inherit"><strong class="text-slate-700">Nom :</strong> &nbsp; {{ user.name }}</li>
                                <li class="relative block px-4 py-2 pl-0 leading-normal bg-white border-0 border-t-0 text-sm text-inherit"><strong class="text-slate-700">Email :</strong> &nbsp; {{ user.email }}</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="w-full max-w-full px-3 lg-max:mt-6 xl:w-4/12">
                    <div class="relative flex flex-col h-full min-w-0 break-words bg-white border-0 shadow-soft-xl rounded-2xl bg-clip-border">
                        <div class="p-4 pb-0 mb-0 bg-white border-b-0 rounded-t-2xl">
                            <h6 class="mb-0">Bloc notes</h6>
                        </div>
                        <div class="flex-auto p-4">
                            <ul class="flex flex-col pl-0 mb-0 rounded-lg">
                                {% if user.notes is empty %}
                                    <li class="relative flex items-center px-0 py-2 bg-white border-0 rounded-t-lg text-inherit">
                                        <div class="w-full mx-2 p-1 text-center justify-center bg-slate-100 bg-opacity-40 border rounded border-dashed border-slate-300">
                                            <span onclick="openNoteModal()" class="text-xs font-semibold leading-tight text-slate-300 cursor-pointer hover:scale-102 hover:text-slate-700 hover:underline"><strong class="font-extrabold">+ </strong>Ajouter un commentaire</span>
                                        </div>
                                    </li>
                                {% else %}
                                    {% for note in user.notes %}
                                        <li class="relative flex items-center px-0 py-2 bg-white border-0 rounded-t-lg text-inherit">
                                            <div class="flex flex-col items-start justify-center w-full">
                                                <h6 class="mb-0 leading-normal text-sm">
                                                    <span class="whitespace-pre-line break-words">{{ note.content|length > 100 ? note.content|slice(0, 100) ~ '...' : note.content }}</span>
                                                    {% if note.content|length > 100 %}
                                                        <a onclick="viewFullNote(`{{ note.content|e('js') }}`)"
                                                           class="inline-block ml-1 text-xs font-semibold text-slate-400 hover:text-slate-700 hover:underline cursor-pointer">
                                                            Voir plus
                                                        </a>
                                                    {% endif %}
                                                </h6>
                                            </div>
                                            <div class="flex items-center ml-auto">
                                                <a onclick="editNote({{ note.id }}, `{{ note.content|e('js') }}`)"
                                                   class="inline-block pl-0 pr-4 mb-0 font-bold text-center align-middle transition-all bg-transparent border-0 rounded-lg shadow-none cursor-pointer leading-pro text-xs ease-soft-in text-slate-400 hover:text-slate-700 hover:underline" 
                                                   href="javascript:;">Modifier</a>
                                                <a onclick="deleteNote({{ note.id }})"
                                                   class="inline-block pl-4 mb-0 font-bold text-center align-middle transition-all bg-transparent border-0 shadow-none cursor-pointer leading-pro text-xs ease-soft-in text-slate-400 hover:text-red-600 hover:underline rounded-none border-l border-slate-300" 
                                                   href="javascript:;">Supprimer</a>
                                            </div>
                                        </li>
                                    {% endfor %}
                                    <li class="relative flex items-center px-0 py-2 bg-white border-0 rounded-t-lg text-inherit">
                                        <div class="w-full mx-2 p-1 text-center justify-center bg-slate-100 bg-opacity-40 border rounded border-dashed border-slate-300">
                                            <span onclick="openNoteModal()" class="text-xs font-semibold leading-tight text-slate-300 cursor-pointer hover:scale-102 hover:text-slate-700 hover:underline"><strong class="font-extrabold">+ </strong>Ajouter un commentaire</span>
                                        </div>
                                    </li>
                                {% endif %}
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

    </div>
{% endblock %}

{% block additional_scripts %}{% endblock %} 